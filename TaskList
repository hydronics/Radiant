QUALITY AND TESTING
+ Update ReadMe for environment setup instructions, generating projects, running/debugging from VS.
+ 

ENGINE
+ Asset Factory/Ref management
+ DirectX
+ COMPONENTS
	Transform
	Sprite
	SceneCamera
	Script
	Mesh
	Light
	Material
	Animation?
	RigidBody (tensor)
	SoftBody?
	Physics (vel, accel, force accumulator)
	Collision
+ Serialize/De-serialize data (text & binary formats)
	- Text will be for source control and merging.  Binary for distribution

EDITOR
+ See Scene.h for comment block on tasks
+ Set Editor UI theme manually by setting all ImGUI theme color props, coming from a config file for Radiant (client can create own theme and override it)
	+ Allow user-provided config file, or default to Radiant main theme.
+ Viewport - Displays the currently created Scene from a registered default Main camera
+ Scenes List - Displays all scenes found in ASSETS_SCENES directory
+ Scene Properties - Certain data that are features of an entire scene, e.g. Skybox/Cube Map, Physics Simulation type, etc.
+ Physics Simulation - Define the properties of how dynamic objects update in the world, e.g. Gravity, 3D/2D collision, Fluid/Hair sims, Force Types, Application, Physics Engine/API
+ Entities List - Alphabetical/Layer/GUID sorting (GUID is general substitution for order-created)
+ Entity Properties/Components List
+ Component Properties display
EDITOR FEATURES:
+ Play/Pause/Stop
+ Real-time updates to component/Scene data
+ Pick single currently selected object
	- Regions-select initially limited to allowing transforms to be updated as group.
	- Transforms would apply to each object transforms individually, not the group.
+ CreateEntity btn - Dialog that lets you name/set tags, Layer, 
	+ Right-click context-menu entry
	+ CreateComponent on entity
+ CreateChildEntity - Currently selected object chosen first (prefill dialog); Dialog flow to select parent, uncheck 
	+ Right-click menu
+ Set Camera motion type (orbital, FPS, Full-360)

//// CONVENIENCE FUNCTION IDEAS ////
- CreateMesh+Animations+Materials UI flow
- CreateLightType UI flow
- 


SCENE
+ SceneGraph
+ GetComponentByName/Tag()
+ GetComponentsInLayer()
+ Serialize/De-Serialize

SHADERS
+ MaterialSystem
+ Lights
+ Off-line shader compiler

RENDERER
+ Dynamic Lighting support
+ Light/shadow map support
+ Texture support (3D, cube, render targets, )
+ SwapChain
+ StencilBuffer
+ Gneric texture atlases
+ Sprite sheets (specialized type of texture atlas)
+ 

